---
haproxy_version: 2.8

# Global config section
haproxy_global_vars:
  - log /dev/log local0
  - log /dev/log local1 notice
  - stats socket /var/lib/haproxy/stats level admin
  - chroot /var/lib/haproxy
  - user haproxy
  - group haproxy
  - daemon

# Default config section
haproxy_default_vars:
  - log global
  - mode tcp
  - option tcplog
  - option dontlognull

# Frontend sections (check example below)
haproxy_frontends: []
# haproxy_frontends:
#   - name: example_frontend
#     config:
#       - bind *:80
#       - mode tcp
#       - default_backend example_backend
#       - option tcplog

#   - name: stats
#     config:
#       - bind *:8404
#       - mode http
#       - stats enable
#       - stats uri /stats
#       - stats refresh 5s
#       - stats admin if TRUE

# Backend sections (check example below)
haproxy_backends: []
# haproxy_backends:
#   - name: example_backend
#     config:
#       - mode tcp
#       - balance roundrobin
#       - option httpchk GET /
#       - http-check expect status 200
#       - default-server inter 3s downinter 3s rise 2 fall 2 slowstart 60s
#       - server app1 10.10.10.11:80 check port 80
#       - server app2 10.10.10.12:80 check port 80

# Listen section (check example below)
haproxy_listens: []
# haproxy_listens:
#   - name: example_listen
#     config:
#       - bind *:443
#       - mode tcp
#       - option tcplog
#       - balance roundrobin
#       - option httpchk GET /
#       - server app1 10.10.10.21:443 check check-ssl
#       - server app2 10.10.10.22:443 check check-ssl

# Install keepalived
haproxy_install_keepalived: false

# Sets "net.ipv4.tcp_retries2"
# The value for this parameter is a balance between detecting a dead connection quickly
# (which may be of value in an HA setting) and reliability in the face of a lossy network
# (eg. overloaded switch, or the wider Internet).
# No one value is perfect for all situations.
# HA configurations with well-provisioned networks AND systems, and only internal traffic, may well choose lower values.
# General-purpose ones and configurations with only one server (non-HA) should not.
# The parameter controls the total time before a connection failure is declared.
# RFC 1122 recommends at least 100 seconds for the timeout, which corresponds to a value of at least 8.
haproxy_keepalived_sysctl_tcp_retries: 8

haproxy_keepalived_peers: []

haproxy_keepalived_virtual_ips: []
